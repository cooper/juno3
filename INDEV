Development log
---------------

TODO:

    [H] fix nick collision/UID collision bugs
    [H] fix server SID/name collision bugs
    [H] fix the bug that is too embarrassing to mention here
    [H] RPL_ISUPPORT
    [M] compact server commands
    [M] LUSERS
    [M] WHO
    [L] idle time in WHOIS
    [L] finish RPL_WELCOME
    [L] invisible NAMES
    [L] MOTD server parameter

PLANS:

    GENERAL:

        create a module API similar to juno v2's, except with the ability to "override" commands, modes, etc.
        the ability to connect to a juno module server and automatically install updates, as well as notifying when the version of the ircd is no longer supported

        module: fake ban

    LINKING:

        rather than remote includes, send certain configuration values over the linking protocol
        modes to be known by their names, types, or levels rather than letters

    CHANNELS:

        module: channel mode to show invite notices

CHANGES:

0. April 30, 2011

    0. April 30, 2011

        0. Added directory finder.

        1. Finished configuration parser and fetcher functions.

        2. Fixed configuration parser.

        3. Added load_requirements() and fatal() util.
           user.pm is now soley for users; connection.pm will handle connections.

        4. Whoops, forgot to put fatal() in @EXPORT_OK.
           fatal() logs the method that called it now.
           Added create_sockets() to create listening sockets and fatal() if not listening.
           Added main loop stuff.
           Added handler to connection.pm (kinda.)
           Added send functions.

        May 1, 2011

        5. Added basic pre-registration commands and temporary incoming data handler (without any form of flood protection.)

        6. Set connection->{ready} when NICK and USER have both been verified.
           Made the configuration parser ignore blank lines.
           Finished outgoing buffer.

        7. Added user::new() and some more user.pm stuff.

        8. Added connection::lookup() to a find a connection by its user or server object.
           Finished connection.pm's data forwarding to user.pm or server.pm.

        9. Finished SERVER and PASS.

    1. May 1, 2011

        0. Fixed realname bug.
           Change configuration setup.

        1. Fixed crash if disconnect before register.
           Allow any drop-in replacement for IO::Socket::INET such as IO::Socket::IP or IO::Socket::INET6.
           Finsihed flood protection and incoming buffer.

        2. Added md5 support.
           Changed configuration some more.
           Added autoconnect and stuff.

        3. Added more linking stuff.

        May 2, 2011

        4. If the credentials have been sent, don't send them again.

        5. Created server::linkage for local protocol functions.

    2. June 12, 2011

        0. Add trim() util.
           Keep track of server descriptions in server.pm.
           Configuration parser now takes literal values and has improved syntax.
           user::mine module is for handling of local user data.

        1. Finished ping system!
           Failure to respond to the first PING now leads to a registration timeout on unregistered connections.
           Added lconf() util for fetching name configuration values.
           
        2. Only send PING if there isn't a pending ping.

        3. Constants on and off define true and false values in the configuration.

        4. server::mine contains the linking protocol handler.

        June 13, 2011

        5. a few fixes.

        6. user::numeric contains numerics.
           Keep track of the server users are connecting from.

        7. added more functions to server::mine include send() to send data to a connected server.
           added user::handlers and server::handlers for local handlers.
           keep track of servers' parents.
           other fixes.

    3. June 13, 2011

        0. Fixed bug where IRCd exits when attempting to write on a closed connection.

        1. $user->mine->method() and $server->mine->method() now calls methods in user::mine and server::mine from a user or server object.

        2. Reverted the stupid ->mine stuff.
           Added several shortcuts to *::mine package functions.
             - you can, of course, call them on an object such as $server->server::mine::send()
           Added register_handler() to server::mine - registers a CODE reference to a command handler.
           Server now handles and sends the UID command.
           Added server::lookup_by_id() to find a server by its SID.

        June 14, 2011

        3. Store server parents by object, not SID.
           Added user::is_local() for determining if the user is on this server.
           server::outgoing contains outgoing commands.
           Added quit() and uid() to server::outgoing.
           Delete all users from a server when that server splits.
           Connects, quits, and bursts should be completely accurate now - the servers should always be synced with users.
           Properly remove child servers, their children, their children's children, and so on when a server splits.

        4. Fixed a bug that sometimes leads to a crash where the local server's parent was unknown (itself).

        5. Fixed several bugs in UID.
           Added SID to share servers from server-to-server.
           BURST no longer sends information on users and servers that the target server is already familiar with.

        June 15, 2011

        6. UID handler now determines who wins a nick collision battle.

        7. Added nick check to registration.
           Fixed a bug that occured when an unregistered connection disconnected.

        8. Added loop functions to extend the main loop.

    4. June 13, 2011 <- obviously time is going backwards (June 15, 2011)

        0. Added hostname resolving! (don't expect it to be perfect [yet])

        June 16, 2011

        1. Fixed a small bug in the hostname resolver.
           Added "forward" option to server handlers.
           When enabled, this server forwards the line to the child servers.
           Fixed a crash bug on nick collision.

        2. Fixed more bugs in the resolver.

        3. Hopefully these fixes will prevent thousands of nick collisions.

        4. Just kidding; this should fix it.

        5. nope, maybe this will.

        6. I almost promise that it works now.
           Fixed a small bug in quit().

        7. Fixed some bugs. Hopefully it actually does work now.

        8. Never mind, this will fix it.

    5. June 16, 2011

        0. Rewrote the hostname resolving. I think it might actually work now. (but don't believe me; I've already thought that the last 10 commits)

        1. I REALLY think it will work now.

        June 17, 2011

        2. Cleaned up a bit.
           Added hostname notices.
           Added user handler and a few other things to  user::mine.
           Fixed a bug where PINGing was done more often than it should be.

        3. Finished user numeric stuff.
           Added fake USER command.

        June 20, 2011

        4. Added some numerics to user connect.
           Added LUSERS command.
           Added MOTD command.

        June 22, 2011

        5. Added more numerics.

        6. Added NICK user command.
           Relay nick changes to child servers.
           Handle NICK command from servers.
           Added fake PING command.

        7. Added INFO command.
           Added support for SHA224 and SHA384.

        July 7, 2011

        8. Fixed a few small bugs.
           Added the ability to fork and become a daemon.
           Added NOFORK option.

        July 8, 2011

        9. Fixed broken NOFORK option.
           Added RPL_ISUPPORT, but much of it is unfinished since channels don't exist yet.

    6. July 8, 2011

        0. beginning to work on channel.pm.

        1. Added channel join method that keeps the channel time accurate.

        2. Added lookup_by_name() channel function.
           Added some other channely stuff.

        3. RPL_LUSERCHANNELS should only be sent if non-zero.

        4. Made some changes to the user mode system.
           Do not change nicks if the nick is taken.

        5. I probably fell asleep while writing the mode validator thingy, but now it is fixed.

        6. Added is_mode() and unset_modes() user functions.
           Fixed a bug that causes crash on user connect because you can't push to a nonexistence array reference.

    7. July 17, 2011

        0. Moved resolve stuff to separate "res" module.

        1. split RPL_ISUPPORT into several lines when necessary.

        2. random cleanup of outgoing.pm

        3. added some stuff to make sure we only sent BURST once.

        4. changed a few more things in burst.

        5. added user mode module.
           from here on, modes will be named rather than lettered.
           fixed a small warning in RPL_ISUPPORT.

        July 18, 2011

        6. added outgoing ADDUMODE command.

        7. send ADDUMODES in burst.

        8. send my ADDUMODES also.
           register internal modes to the local server.

        9. handle ADDUMODEs.

    8. July 18, 2011

        0. handle UMODE server command.
           added user::handle_mode_string() which translates a string of mode letters to their mode names and sets or unsets them.

        1. added user->mode_string() to create mode strings to the user's local server.
           actually send modes in UID command now.

        2. handle mode strings in UID and apply the modes.

        3. made it possible to add multiple user handlers of the same command (which will be useful later in the module API.)

        4. did the same for server handlers.

        5. added default mode settings.

        6. added MODE user command.
           handle_mode_string() now returns the final mode string, which will be used later.

        7. cleaned up some stuff.

        July 19, 2011

        8. send MODE string back to a user when he sets user modes.
           fixed time bug in resolving.

    9. July 19, 2011

        0. Fixed a small bug in the user mode handler.

        1. added user mode tests. if any of the tests fail, the mode will not be accepted.

        2. send UMODE to other servers.

        3. added PRIVMSG handler! :D
             local user-to-user PRIVMSGs should work now.

        4. added PRIVMSG server handler.
             global user-to-user PRIVMSGs should work now.

        5. added a really fail MAP that will be made prettier later.

        6. fixed a few things and added more numerics to LUSERS.

        7. fixed something in LUSERS.
           added nickname in use numeric.

        8. fixed another LUSERS bug.

        9. added NOTICE command.
           send NOTICE from server to server.
           fix a couple small things.

1. July 20, 2011

    0. July 20, 2011

        0. added join user handler. (yay, soon we will have working channels!)

        1. fixed a bug in the PRIVMSG/NOTICE handler.

        2. omg we have join.

        3. joining a channel now sends NAMES and creation time.

        4. local PRIVMSG to channel now works.
           quit messages are sent to users in common channels now.

        5. send and handle joins among servers.

        6. just kidding. it will work now.

        7. still kidding... maybe this will work.

        8. okay, channel PRIVMSGs now work globally.

        9. send channel joins in burst.

    1. July 20, 2011

        0. Maybe this will fix fail problem?

        1. users should definitely be removed from channels properly now.

        2. I should stop saying 'definitely' when i'm not sure.
             now they should DEFINITELY be working right.

        3. i'm too unorganized to know or care what changed in this commit.
             why do i even keep track?
             odds are that i'm going to do five or six more to fix this commit because it's probably broken
             just like all the others.

        4. maybe this will fix the flood problem.

        5. or this. hash != hashref.

        6. I THINK CHANNELS ACTUALLY STAY IN SYNC NOW AND I AM USING CAPITALS BECAUSE THIS COMMIT IS ACTUALLY IMPORTANT.

        7. show SID in MAP.

        8. added NAMES command.

        9. send NICK messages globally. nicknames should be in sync at all times now.

    2. July 21, 2011 (omg time please no..)

        0. removed LUSERS temporarily because it sucks.
           added OPER command, oper blocks, and oper classes!
             see the example configuration.
           user->handle_mode_string now takes an optional 'force' argument that, when true, skips the mode tests.
           this new argument is now used in the linking protocol, that way servers can force users to oper up.

        1. added user functions to add/remove/check oper flags.

        2. keep oper flags in sync between servers that way we can user->has_flag for non-local users.

        3. only send the MODE message if the returned string isn't empty.
           send ircop mode to other servers on /oper.

        4. fixed a crash.. dunno why i put 'opers' instead of 'flags'

        5. fixed a bug where you could not unset your oper mode.

        6. rewrote the way mode blocks are done.

        7. RPL_MYINFO now shows the actual user modes registered to the ircd.

        8. connect blocks now allow wildcards in the IP address.

        9. added host option to oper blocks. see example configuration.

    3. July 22, 2011

        0. Added WHOIS command.

        July 23, 2011

        1. Added ISON command.

        2. Added handler description and COMMANDS command as in the earlier version of juno.

        3. Added AWAY user command.

        4. Send and handle AWAY messages from server to server.

        5. Added away line to WHOIS command.
           notify users when they send PRIVMSGs to away users.

        6. Added QUIT command (both as a normal command a pre-registration command.)

        7. might as well use the magic provided by IO::Handle.

    4. July 25, 2011

        0. added base of channel modes and mode handler.
           removed useless mode test code (which was replace by mode blocks in user/modes.pm)

        1. made several improvements to the channel mode handler and channel/modes.pm.
           fixed a bug in the user mode handler where force didn't apply blocks.

        2. added ADDCMODE and CMODE server commands.
           burst ADDCMODE and CMODE.

        3. added handlers for ADDCMODE and CMODE.

        4. MODE handler now handles channel mode strings.
           when modes are set to channels, they should properly be sent in MODE messages to both local and non-local members.
           cleaned up a bit in server/handlers.

        5. MODE now accepts a channel with no other parameters.

        6. this should fix a few things.

        7. fixed bug. now the channel modes should be sent among servers.

        8. CHANMODES is now accurate!


        July 26, 2011

        9. fixed a few more things with channel modes and stuff.

    5. July 26, 2011

        0. FINALLY fixed the ridiculous bug that made the IRCd unpractical for use.
           Now we know that this IRCd still has hope to become usable.

        1. fixed a couple of crash bugs in channel communication.

        2. send CMODE types from server-to-server.

        3. added CMODE converter to translate names to modes.

        4. fixed bug in the new mode converter.

        5. made several major improvements to status modes!

        6. added support for five prefixes.

    6. July 27, 2011

        0. This is too big of an update to explain in a few lines.

        July 30, 2011

        1. fixed a number of bugs in the burst with modes, etc.

        2. added mode_string_all, which is the same as mode_string except it sends ALL modes, including status modes and list modes.
           hopefully this will make channels stay in sync with modes (except during netsplits where the lower TS should be taken, but I'll get to that soon.)

        3. more improvements in taking the lower TS.

        4. remove users from status lists when they quit/part/etc.

        5. delete channel data if the last user leaves the channel.

        6. added PART user command.
           added PART server command.
           channel user lists should be 100% accurate at all times now.

        7. hopefully this will fix a few bugs in channel mode syncing.

        8. after all that debugging.. it turned out to be the smallest typo ever.

        9. don't accept mode changes for older times.

    7. July 28, 2011

        0. this bug makes me so extremely angry.

        1. don't allow to /connect to a server that is already connected.
           close connection to a server if it isn't who we thought it was.

        2. hopefully this fixes things.

        3. only ops can set channel modes now.
           also, I'm pretty sure that all of the bugs causing crashes because of unrecognized clients are fixed.
